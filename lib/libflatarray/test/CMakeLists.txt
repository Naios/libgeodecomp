if(WITH_CUDA)
  cuda_add_executable(cuda_allocator_test cuda_allocator_test.cu)
endif()
add_executable(aligned_allocator_test aligned_allocator_test.cpp)
add_executable(api_traits_test api_traits_test.cpp)
add_executable(short_vec_test short_vec_test.cpp)
add_executable(soa_array_test soa_array_test.cpp)
add_executable(soa_grid_test soa_grid_test.cpp)

if(WITH_CUDA)
  add_custom_target(run_cuda_allocator_test  echo "running cuda_allocator_test"    && ./cuda_allocator_test)
endif()
add_custom_target(run_aligned_allocator_test echo "running aligned_allocator_test" && ./aligned_allocator_test)
add_custom_target(run_api_traits_test        echo "running api_traits_test"        && ./api_traits_test)
add_custom_target(run_short_vec_test         echo "running short_vec_test"         && ./short_vec_test)
add_custom_target(run_soa_array_test         echo "running soa_array_test"         && ./soa_array_test)
add_custom_target(run_soa_grid_test          echo "running soa_grid_test"          && ./soa_grid_test)

if(WITH_CUDA)
  add_dependencies(check run_cuda_allocator_test)
endif()
add_dependencies(check run_aligned_allocator_test)
add_dependencies(check run_api_traits_test)
add_dependencies(check run_short_vec_test)
add_dependencies(check run_soa_array_test)
add_dependencies(check run_soa_grid_test)

if(WITH_CUDA)
  add_dependencies(run_cuda_allocator_test cuda_allocator_test)
endif()
add_dependencies(run_aligned_allocator_test aligned_allocator_test)
add_dependencies(run_api_traits_test        api_traits_test)
add_dependencies(run_short_vec_test         short_vec_test)
add_dependencies(run_soa_array_test         soa_array_test)
add_dependencies(run_soa_grid_test          soa_grid_test)

if(WITH_CUDA)
  target_link_libraries(cuda_allocator_test  ${Boost_LIBRARIES})
endif()
target_link_libraries(aligned_allocator_test ${Boost_LIBRARIES})
target_link_libraries(api_traits_test        ${Boost_LIBRARIES})
target_link_libraries(short_vec_test         ${Boost_LIBRARIES})
target_link_libraries(soa_array_test         ${Boost_LIBRARIES})
target_link_libraries(soa_grid_test          ${Boost_LIBRARIES})
